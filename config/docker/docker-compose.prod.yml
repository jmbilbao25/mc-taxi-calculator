version: '3.8'

services:
  # MongoDB Database (Production)
  mongodb:
    image: mongo:7.0
    container_name: fare-calculator-mongodb-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: fare_calculator
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_prod:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - fare-calculator-network-prod
    command: mongod --auth --bind_ip_all

  # Backend API (Production)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: fare-calculator-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/fare_calculator?authSource=admin
      DB_NAME: fare_calculator
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
    volumes:
      - ./logs:/app/logs
    networks:
      - fare-calculator-network-prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Frontend (Production)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: runner
    container_name: fare-calculator-frontend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${API_URL}
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - fare-calculator-network-prod
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: fare-calculator-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - fare-calculator-network-prod
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'

volumes:
  mongodb_data_prod:
    driver: local

networks:
  fare-calculator-network-prod:
    driver: bridge
